[gd_scene load_steps=10 format=2]

[ext_resource path="res://MainMenu.gd" type="Script" id=1]
[ext_resource path="res://sprites/GUI/pushok.png" type="Texture" id=2]
[ext_resource path="res://sprites/GUI/pusopen.png" type="Texture" id=3]
[ext_resource path="res://sprites/GUI/noise.jpg" type="Texture" id=4]
[ext_resource path="res://sprites/GUI/characters.png" type="Texture" id=5]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D chars;
uniform sampler2D noise_tex; 

void fragment() {
	// Random character
	vec2 uv = fract(UV * 32.0); // loop uv 32 times for the characters (as the noise resolution is 32x32)
	float noise = texture(noise_tex, UV).g;
	noise = round(noise * 10.0) / 10.0; // make sure the color value are snapped by 0.1 (so its only 0.0, 0.1, 0.2, and so on) for perfect offset
	uv.x = (uv.x / 10.0) - 0.005; // offset
	uv.x += noise; // offset every character by the noise value
	uv.x += round(TIME * 0.8 * 10.0)/10.0; // animate characters with TIME, then snapped by 0.1 so it doesnt slide. 0.5 is the speed, you might want to change that
	
	// distortion
	float rain = UV.y; // this is a vertical gradient
	float distortion = texture(noise_tex, UV / vec2(1.0, 32.0)).g; // this will be used for distortion, using previous noise but only horizontal
	distortion = round(distortion * 10.0) / 10.0; // for precision reason, you need to round your distortion too, otherwise some character wouldnt be fully shown
	rain -= round(TIME * 0.2 * 32.0) / 32.0; // the 'rain' shouldn't move smoothly right? also, 0.2 is the speed
	rain += distortion; // distort this gradient, turning it into a rain
	rain = fract(rain); // loop the rain
	rain = round(rain * 16.0) / 16.0; // pixelate the rain. Rounding by 32.0 or 8.0 is optional
	rain = pow(rain, 3.0); // this is not necessary, i just think that it looks good
	rain *= 2.0; // this is also not important, just making the characters brighter
	
	COLOR.rgb = texture(chars, uv).rgb * rain * vec3(cos(TIME/5.0), 1.0,sin(TIME/5.)); // finally multiply them together then multiply with green for the color
}"

[sub_resource type="ShaderMaterial" id=2]
render_priority = 2
shader = SubResource( 1 )
shader_param/chars = ExtResource( 5 )
shader_param/noise_tex = ExtResource( 4 )

[sub_resource type="InputEventAction" id=3]
action = "ui_accept"

[sub_resource type="ShortCut" id=4]
shortcut = SubResource( 3 )

[node name="MainMenu" type="ColorRect"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="TextureButton" type="TextureButton" parent="CenterContainer"]
margin_left = 390.0
margin_top = 290.0
margin_right = 410.0
margin_bottom = 310.0
shortcut = SubResource( 4 )
texture_normal = ExtResource( 3 )
texture_pressed = ExtResource( 2 )
texture_hover = ExtResource( 2 )

[connection signal="pressed" from="CenterContainer/TextureButton" to="." method="_on_TextureButton_pressed"]
